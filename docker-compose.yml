services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: takeabreak-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: takeabreak_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: takeabreak-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask API
  api:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.api
    container_name: takeabreak-api
    environment:
      FLASK_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/takeabreak_dev
      REDIS_URL: redis://redis:6379/0
      CORS_ORIGINS: http://localhost:3000
    ports:
      - "5001:5000"
    volumes:
      - ./apps/api:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["python", "run.py"]

  # Next.js Web App
  web:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.web
    container_name: takeabreak-web
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:5001
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app/apps/web
      - /app/apps/web/node_modules
      - /app/apps/web/.next
    depends_on:
      - api
    command: ["pnpm", "dev"]

  # Celery Worker (for background tasks)
  celery:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.api
    container_name: takeabreak-celery
    environment:
      FLASK_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/takeabreak_dev
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./apps/api:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["celery", "-A", "app.celery_app:celery", "worker", "--loglevel=info"]

volumes:
  postgres_data:
  redis_data: